name: Deploy APS Assessment System

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t assessment-aps-assessment:latest .
        docker tag assessment-aps-assessment:latest assessment-aps-assessment:${{ github.sha }}
    
    - name: Save Docker image
      run: |
        docker save assessment-aps-assessment:latest | gzip > aps-assessment-image.tar.gz
    
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          # 기존 컨테이너 중지 및 제거
          docker stop aps-assessment-app 2>/dev/null || true
          docker rm aps-assessment-app 2>/dev/null || true
          
          # 기존 이미지 제거 (옵션)
          docker rmi assessment-aps-assessment:latest 2>/dev/null || true
    
    - name: Copy Docker image to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || 22 }}
        source: "aps-assessment-image.tar.gz"
        target: "/tmp/"
    
    - name: Load and run Docker image on server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          # Docker 이미지 로드
          cd /tmp
          docker load < aps-assessment-image.tar.gz
          
          # 새 컨테이너 실행
          docker run -d \
            --name aps-assessment-app \
            --restart unless-stopped \
            -p 5000:5000 \
            -v aps-assessment-data:/app/data \
            assessment-aps-assessment:latest
          
          # 정리
          rm -f aps-assessment-image.tar.gz
          
          # 컨테이너 상태 확인
          sleep 10
          docker ps | grep aps-assessment-app
          
          # 헬스체크 (선택사항)
          curl -f http://localhost:5000 || echo "Health check failed, but container may still be starting..."
    
    - name: Cleanup local Docker images
      run: |
        docker rmi assessment-aps-assessment:latest 2>/dev/null || true
        docker rmi assessment-aps-assessment:${{ github.sha }} 2>/dev/null || true
        rm -f aps-assessment-image.tar.gz